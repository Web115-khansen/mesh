var mesh=mesh||{};mesh.frontend=function(a){var b,c=(a("body"),a(window)),d=a(".mesh_section [data-equalizer]"),e=!1;return a.fn.removeInlineStyle=function(a){var b=new RegExp(a+"[^;]+;?","g"),c=this.attr("style");return void 0!==c&&this.attr("style",c.replace(b,"")),this},{init:function(){b=mesh.frontend,"object"!=typeof Foundation?e=!0:"object"==typeof Foundation&&("function"!=typeof Foundation.Equalizer&&void 0==typeof Foundation.libs?e=!0:"function"!=typeof Foundation.Equalizer&&"object"==typeof Foundation.libs.equalizer&&"function"!=typeof Foundation.libs.equalizer.equalize&&(e=!0)),e&&c.load(b.mesh_equalize_init).resize(b.mesh_equalize_init),a(".has-parallax").length&&c.load(b.mesh_parallax).scroll(b.mesh_parallax)},mesh_equalize_init:function(){d.each(b.mesh_equalize)},mesh_equalize:function(){var b=a(this),c=a("[data-equalizer-watch]",b),d=0;c.each(function(){a(this).removeInlineStyle("height")}),c.each(function(){var b=a(this).height();d=b>d?b:d}).height(d)},mesh_parallax:function(){var b=a(window).scrollTop(),c=a(window).height(),d=b+c/2;a(".has-parallax").each(function(){var b=a(this).height(),e=a(this).offset().top,f=e+b/2,g=b/c;a(".parallax-background",this).css("top",(d-f)*(2/3)*g-b/4)})}}}(jQuery),jQuery(function(a){mesh.frontend.init()});